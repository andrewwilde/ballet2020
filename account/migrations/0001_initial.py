# Generated by Django 2.2.9 on 2020-01-29 04:42

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'abstract': False,
                'verbose_name_plural': 'users',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DanceClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_students', models.IntegerField()),
                ('date_time', models.DateTimeField()),
                ('studio', models.CharField(max_length=20)),
                ('level', models.CharField(choices=[('Pre', 'Pre'), ('Kinder', 'Kinder'), ('Beginning 1', 'Beginning 1'), ('Beginning 2', 'Beginning 2'), ('Intermediate 1', 'Intermediate 1'), ('Intermediate 2', 'Intermediate 2'), ('Advanced 1', 'Advanced 1'), ('Advanced 2', 'Advanced 2'), ('Adult All Levels', 'Adult All Levels'), ('Adult Beginning', 'Adult Beginning'), ('Adult Advanced', 'Adult Advanced')], max_length=20)),
                ('dance_type', models.CharField(choices=[('Ballet', 'Ballet'), ('Jazz', 'Jazz'), ('Tap', 'Tap'), ('Modern', 'Modern'), ('Irish', 'Irish'), ('Ballroom', 'Ballroom'), ('Hip Hop', 'Hip Hop')], max_length=20)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Inactive', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('birth_date', models.DateField()),
                ('medical', models.TextField()),
                ('student_type', models.CharField(choices=[('Standard', 'Standard'), ('Scholarship', 'Scholarship'), ('Agreement', 'Agreement')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='AdminAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.Account')),
                ('account_type', models.CharField(default='Admin', max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'abstract': False,
                'verbose_name_plural': 'users',
            },
            bases=('account.account',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ParentAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.Account')),
                ('account_type', models.CharField(default='Parent', max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'abstract': False,
                'verbose_name_plural': 'users',
            },
            bases=('account.account',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAccount',
            fields=[
                ('account_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.Account')),
                ('account_type', models.CharField(default='Teacher', max_length=20)),
            ],
            options={
                'verbose_name': 'user',
                'abstract': False,
                'verbose_name_plural': 'users',
            },
            bases=('account.account',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClassAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dance_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.DanceClass')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAssignment',
            fields=[
                ('classassignment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.ClassAssignment')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.TeacherAccount')),
            ],
            bases=('account.classassignment',),
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('classassignment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.ClassAssignment')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Inactive', max_length=15)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Student')),
            ],
            bases=('account.classassignment',),
        ),
    ]
